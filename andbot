#!/bin/sh

SELF=$0
CMD=$1
if [ $# -gt 0 ]; then
	shift
fi

case $CMD in
	'')
		ROOTFS=`cd "${SELF%/*}"; pwd`

		if [ "$ROOTFS" = "" ] || [ "$ROOTFS" = "/home/andbot/bin" ]; then
			echo "usage: $SELF <command> [<argument>, ...]"
			echo "commands:"
			echo "	init:		repo init"
			echo "	sync:		repo sync"
			echo "	prebuilt:	prepare prebuilt/vendor files"
			echo "	brunch:		build"
			echo "	mka:		build (i.e.: andbot mka bacon)"
			echo "	make:		build (i.e.: andbot make -j[#cpus] bacon)"
			echo "	clobber:	remove build directory"
			echo "	manifest:	fetch local_manifest.xml"
			echo "	github-https:	workaround for github-related errors"
			echo "	github-git:	undo aforementioned workaround"
			echo "	release-512:	workaround for java-related memory errors"
			echo "	release-2048:	undo aforementioned workaround"
			exit
		fi

		if [ $(id -u) -ne 0 ]; then
			exec sudo $SELF
		fi

		mount | grep -Fq "$ROOTFS/proc"
		MOUNTED=$?
		if [ $MOUNTED -ne 0 ]; then
			echo Mounting /proc, /sys, /dev, and /dev/pts
			mount -o bind /proc "$ROOTFS/proc"
			mount -o bind /sys "$ROOTFS/sys"
			mount -o bind /dev "$ROOTFS/dev"
			mount -o bind /dev/pts "$ROOTFS/dev/pts"
		fi

		chown -R 0:0 "$ROOTFS/usr/bin/sudo" "$ROOTFS/usr/lib/sudo" "$ROOTFS/etc/sudoers" "$ROOTFS/etc/sudoers.d"
		chmod 4755 "$ROOTFS/usr/bin/sudo"
		echo
		echo "====8<==========="
		echo "Welcome to AndBot"
		echo " * bacon maker * "
		echo "===========>8===="
		echo
		chroot "$ROOTFS" su andbot -c 'cd ~/android/system; ~/bin/adb devices; USE_CCACHE=1 bash -l'

		if [ $MOUNTED -ne 0 ]; then
			echo Unmounting /proc, /sys, /dev, and /dev/pts
			while umount -l "$ROOTFS/dev/pts" 2> /dev/null; do true; done
			while umount -l "$ROOTFS/dev" 2> /dev/null; do true; done
			while umount -l "$ROOTFS/sys" 2> /dev/null; do true; done
			while umount -l "$ROOTFS/proc" 2> /dev/null; do true; done
		fi
		;;
	'init')
		set -e -x
		cd ~/android/system
		exec repo init -u git://github.com/CyanogenMod/android.git -b jellybean $@
		;;
	'sync')
		set -e -x
		cd ~/android/system
		exec repo sync $@
		;;
	'prebuilt')
		if [ "$1" != "" ]; then
			ZIP=`readlink -f "$1"`
			set -e -x
			cd ~/android/system/device/bn/encore
			./unzip-files.sh "$ZIP"
		else
			set -e -x
			cd ~/android/system/device/bn/encore
			./extract-files.sh
		fi
		cd ~/android/system/vendor/cm
		exec ./get-prebuilts
		;;
	'brunch')
		set -e -x
		cd ~/android/system
		USE_CCACHE=1 exec bash -c ". build/envsetup.sh; lunch cm_encore-userdebug; brunch $@"
		;;
	'mka')
		set -e -x
		cd ~/android/system
		USE_CCACHE=1 exec bash -c ". build/envsetup.sh; lunch cm_encore-userdebug; mka $@"
		;;
	'make')
		set -e -x
		cd ~/android/system
		USE_CCACHE=1 exec bash -c ". build/envsetup.sh; lunch cm_encore-userdebug; make $@"
		;;
	'clobber')
		set -e -x
		cd ~/android/system
		exec make clobber
		;;
	'manifest')
		set -e -x
		curl http://pastebin.com/raw.php?i=vZFKdc8m > ~/android/system/.repo/local_manifest.xml
		;;
	'github-https')
		set -e -x
		sed 's/git\:\/\/github.com/https\:\/\/github.com/' ~/android/system/.repo/manifest.xml > .manifest.xml
		mv .manifest.xml ~/android/system/.repo/manifest.xml
		;;
	'github-git')
		set -e -x
		sed 's/https\:\/\/github.com/git\:\/\/github.com/' ~/android/system/.repo/manifest.xml > .manifest.xml
		mv .manifest.xml ~/android/system/.repo/manifest.xml
		;;
	'release-512')
		set -e -x
		sed 's/-Xmx2048m/-Xmx512m/' ~/android/system/build/tools/releasetools/common.py > .common.py
		mv .common.py ~/android/system/build/tools/releasetools/common.py
		;;
	'release-2048')
		set -e -x
		sed 's/-Xmx512m/-Xmx2048m/' ~/android/system/build/tools/releasetools/common.py > .common.py
		mv .common.py ~/android/system/build/tools/releasetools/common.py
		;;
esac
